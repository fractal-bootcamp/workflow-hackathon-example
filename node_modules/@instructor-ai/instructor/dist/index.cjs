"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _openai = require('openai'); var _openai2 = _interopRequireDefault(_openai);var _streaming = require('openai/streaming');var _zod = require('zod');var _zodstream = require('zod-stream'); var _zodstream2 = _interopRequireDefault(_zodstream);var _zodvalidationerror = require('zod-validation-error');function T(i,e){let t={};for(let n in e)e.hasOwnProperty(n)&&!i.includes(n)&&(t[n]=e[n]);return t}async function P(i,e){let t=Array.from({length:e},()=>[]),n=[],p=i[Symbol.asyncIterator](),a=!1;async function*l(d){for(;;)if(t[d].length>0)yield t[d].shift();else{if(a)break;await new Promise(h=>n.push(h))}}return(async()=>{for await(let d of{[Symbol.asyncIterator]:()=>p}){for(let h of t)h.push(d);for(;n.length>0;)n.shift()()}for(a=!0;n.length>0;)n.shift()()})(),Array.from({length:e},(d,h)=>l(h))}var o=_zodstream.MODE,r={OAI:"OAI",ANYSCALE:"ANYSCALE",TOGETHER:"TOGETHER",ANTHROPIC:"ANTHROPIC",GROQ:"GROQ",OTHER:"OTHER"},E={[r.OTHER]:[o.FUNCTIONS,o.TOOLS,o.JSON,o.JSON_SCHEMA,o.MD_JSON],[r.OAI]:[o.FUNCTIONS,o.TOOLS,o.JSON,o.MD_JSON],[r.ANYSCALE]:[o.TOOLS,o.JSON,o.JSON_SCHEMA,o.MD_JSON],[r.TOGETHER]:[o.TOOLS,o.JSON,o.JSON_SCHEMA,o.MD_JSON],[r.ANTHROPIC]:[o.MD_JSON,o.TOOLS],[r.GROQ]:[o.TOOLS,o.FUNCTIONS,o.MD_JSON]},C={[r.ANYSCALE]:"api.endpoints.anyscale",[r.TOGETHER]:"api.together.xyz",[r.OAI]:"api.openai.com",[r.ANTHROPIC]:"api.anthropic.com",[r.GROQ]:"api.groq.com"},S={[r.GROQ]:{[o.TOOLS]:function(e){return e.tools.some(t=>t)&&e.stream&&console.warn("Streaming may not be supported when using tools in Groq, try MD_JSON instead"),e}},[r.ANYSCALE]:{[o.JSON_SCHEMA]:function(e){return"additionalProperties"in e.response_format.schema?{...e,response_format:{...e.response_format,schema:T(["additionalProperties"],e.response_format.schema)}}:e},[o.TOOLS]:function(e){return e.tools.some(t=>_optionalChain([t, 'access', _2 => _2.function, 'optionalAccess', _3 => _3.parameters]))?{...e,tools:e.tools.map(t=>_optionalChain([t, 'access', _4 => _4.function, 'optionalAccess', _5 => _5.parameters])?{...t,function:{...t.function,parameters:T(["additionalProperties"],t.function.parameters)}}:t)}:e}}},M={[r.OTHER]:{[o.FUNCTIONS]:["*"],[o.TOOLS]:["*"],[o.JSON]:["*"],[o.MD_JSON]:["*"],[o.JSON_SCHEMA]:["*"]},[r.OAI]:{[o.FUNCTIONS]:["*"],[o.TOOLS]:["*"],[o.JSON]:["*"],[o.MD_JSON]:["*"]},[r.TOGETHER]:{[o.MD_JSON]:["*"],[o.JSON_SCHEMA]:["mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.1","togethercomputer/CodeLlama-34b-Instruct"],[o.TOOLS]:["mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.1","togethercomputer/CodeLlama-34b-Instruct"]},[r.ANYSCALE]:{[o.MD_JSON]:["*"],[o.JSON_SCHEMA]:["mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mixtral-8x7B-Instruct-v0.1"],[o.TOOLS]:["mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mixtral-8x7B-Instruct-v0.1"]},[r.ANTHROPIC]:{[o.MD_JSON]:["*"],[o.TOOLS]:["*"]},[r.GROQ]:{[o.TOOLS]:["mixtral-8x7b-32768","gemma-7b-it"],[o.MD_JSON]:["*"]}};var D=0,A=class{constructor({client:e,mode:t,debug:n=!1,logger:p=void 0,retryAllErrors:a=!1}){this.debug=!1;this.retryAllErrors=!1;this.chat={completions:{create:async(e,t)=>{if(this.validateModelModeSupport(e),this.isChatCompletionCreateParamsWithModel(e))return e.stream?this.chatCompletionStream(e,t):this.chatCompletionStandard(e,t);if(_optionalChain([this, 'access', _6 => _6.client, 'access', _7 => _7.chat, 'optionalAccess', _8 => _8.completions, 'optionalAccess', _9 => _9.create]))return this.isStandardStream(e)?await this.client.chat.completions.create(e,t):await this.client.chat.completions.create(e,t);throw new Error("Completion method is undefined")}}};if(!k(e)&&!(e instanceof _openai2.default))throw new Error("Client does not match the required structure");e instanceof _openai2.default?this.client=e:this.client=e,this.mode=t,this.debug=n,this.retryAllErrors=a,this.logger=_nullishCoalesce(p, () => (void 0));let l=typeof _optionalChain([this, 'access', _10 => _10.client, 'optionalAccess', _11 => _11.baseURL])=="string"?_optionalChain([this, 'access', _12 => _12.client, 'optionalAccess', _13 => _13.baseURL, 'access', _14 => _14.includes, 'call', _15 => _15(C.ANYSCALE)])?r.ANYSCALE:_optionalChain([this, 'access', _16 => _16.client, 'optionalAccess', _17 => _17.baseURL, 'access', _18 => _18.includes, 'call', _19 => _19(C.TOGETHER)])?r.TOGETHER:_optionalChain([this, 'access', _20 => _20.client, 'optionalAccess', _21 => _21.baseURL, 'access', _22 => _22.includes, 'call', _23 => _23(C.OAI)])?r.OAI:_optionalChain([this, 'access', _24 => _24.client, 'optionalAccess', _25 => _25.baseURL, 'access', _26 => _26.includes, 'call', _27 => _27(C.ANTHROPIC)])?r.ANTHROPIC:r.OTHER:r.OTHER;this.provider=l,this.validateOptions()}validateOptions(){let e=E[this.provider].includes(this.mode);this.provider===r.OTHER&&this.log("debug","Unknown provider - cant validate options."),e||this.log("warn",`Mode ${this.mode} may not be supported by provider ${this.provider}`)}validateModelModeSupport(e){if(this.provider!==r.OAI){let t=M[this.provider][this.mode];if(!t.includes("*")&&!t.includes(e.model))throw new Error(`Model ${e.model} is not supported by provider ${this.provider} in mode ${this.mode}`)}}log(e,...t){if(this.logger&&this.logger(e,...t),!this.debug&&e==="debug")return;let n=new Date().toISOString();switch(e){case"debug":console.debug(`[Instructor:DEBUG] ${n}:`,...t);break;case"info":console.info(`[Instructor:INFO] ${n}:`,...t);break;case"warn":console.warn(`[Instructor:WARN] ${n}:`,...t);break;case"error":console.error(`[Instructor:ERROR] ${n}:`,...t);break}}async chatCompletionStandard({max_retries:e=D,response_model:t,...n},p){let a=0,l="",d=null,h=_optionalChain([S, 'optionalAccess', _28 => _28[this.provider], 'optionalAccess', _29 => _29[this.mode]]),u=_zodstream.withResponseModel.call(void 0, {params:{...n,stream:_nullishCoalesce(n.stream, () => (!1))},mode:this.mode,response_model:t});h&&(u=h(u));let f=async()=>{let s=u;_optionalChain([l, 'optionalAccess', _30 => _30.length])>0&&(s={...u,messages:[...u.messages,...d?[d]:[],{role:"user",content:`Please correct the function call; errors encountered:
 ${l}`}]});let c;try{if(_optionalChain([this, 'access', _31 => _31.client, 'access', _32 => _32.chat, 'optionalAccess', _33 => _33.completions, 'optionalAccess', _34 => _34.create]))c=await this.client.chat.completions.create({...s,stream:!1},p);else throw new Error("Unsupported client type -- no completion method found.");this.log("debug","raw standard completion response: ",c)}catch(O){throw this.log("error",`Error making completion call - mode: ${this.mode} | Client base URL: ${this.client.baseURL} | with params:`,s,"raw error",O),O}let I=_zodstream.OAIResponseParser.call(void 0, c);try{return{...JSON.parse(I),_meta:{usage:_nullishCoalesce(_optionalChain([c, 'optionalAccess', _35 => _35.usage]), () => (void 0))}}}catch(O){throw this.log("error","failed to parse completion",I,this.mode,"attempt: ",a,"max attempts: ",e),O}},m=async()=>{try{let s=await f(),c=await t.schema.safeParseAsync(s);if(this.log("debug",t.name,"Completion validation: ",c),!c.success)throw"error"in c?(d={role:"assistant",content:JSON.stringify(s)},l=_optionalChain([_zodvalidationerror.fromZodError.call(void 0, c.error), 'optionalAccess', _36 => _36.message]),c.error):new Error("Validation failed.");return{...c.data,_meta:_nullishCoalesce(_optionalChain([s, 'optionalAccess', _37 => _37._meta]), () => ({}))}}catch(s){if(!this.retryAllErrors&&!(s instanceof _zod.ZodError))throw s;if(a<e)return this.log("debug",`response model: ${t.name} - Retrying, attempt: `,a),this.log("warn",`response model: ${t.name} - Validation issues: `,l," - Attempt: ",a," - Max attempts: ",e),a++,await m();throw this.log("debug",`response model: ${t.name} - Max attempts reached: ${a}`),this.log("error",`response model: ${t.name} - Validation issues: `,l),s}};return m()}async*chatCompletionStream({max_retries:e,response_model:t,...n},p){e&&this.log("warn","max_retries is not supported for streaming completions");let a=_optionalChain([S, 'optionalAccess', _38 => _38[this.provider], 'optionalAccess', _39 => _39[this.mode]]),l=_zodstream.withResponseModel.call(void 0, {params:{...n,stream:!0},response_model:t,mode:this.mode});a&&(l=a(l));let d=new (0, _zodstream2.default)({debug:_nullishCoalesce(this.debug, () => (!1))});async function h(m){for await(let s of m)"usage"in s&&(u=s.usage)}let u,f=await d.create({completionPromise:async()=>{if(_optionalChain([this, 'access', _40 => _40.client, 'access', _41 => _41.chat, 'optionalAccess', _42 => _42.completions, 'optionalAccess', _43 => _43.create])){let m=await this.client.chat.completions.create({...l,stream:!0},p);if(this.log("debug","raw stream completion response: ",m),this.provider==="OAI"&&_optionalChain([l, 'optionalAccess', _44 => _44.stream])&&"stream_options"in l&&m instanceof _streaming.Stream){let[s,c]=m.tee();return h(s),_zodstream.OAIStream.call(void 0, {res:c})}if(this.provider!=="OAI"&&_optionalChain([l, 'optionalAccess', _45 => _45.stream])&&_optionalChain([m, 'optionalAccess', _46 => _46[Symbol.asyncIterator]])){let[s,c]=await P(m,2);return h(s),_zodstream.OAIStream.call(void 0, {res:c})}return _zodstream.OAIStream.call(void 0, {res:m})}else throw new Error("Unsupported client type")},response_model:t});for await(let m of f)yield{...m,_meta:{usage:_nullishCoalesce(u, () => (void 0)),..._nullishCoalesce(_optionalChain([m, 'optionalAccess', _47 => _47._meta]), () => ({}))}}}isChatCompletionCreateParamsWithModel(e){return"response_model"in e}isStandardStream(e){return"stream"in e&&e.stream===!0}};function R(i){let e=new A(i);return new Proxy(e,{get:(n,p,a)=>p in n?Reflect.get(n,p,a):Reflect.get(n.client,p,a)})}function k(i){return typeof i=="object"&&i!==null&&"baseURL"in i&&"chat"in i&&typeof i.chat=="object"&&"completions"in i.chat&&typeof i.chat.completions=="object"&&"create"in i.chat.completions&&typeof i.chat.completions.create=="function"}var ee=R;exports.default = ee;
//# sourceMappingURL=index.cjs.map